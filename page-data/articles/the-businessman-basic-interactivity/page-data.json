{"componentChunkName":"component---src-components-article-tsx-content-file-path-home-runner-work-sergii-dev-sergii-dev-articles-2023-09-26-the-businessman-basic-interactivity-mdx","path":"/articles/the-businessman-basic-interactivity/","result":{"data":{"site":{"siteMetadata":{"title":"Sergii Mykhailov","author":"Sergii Mykhailov"}},"mdx":{"excerpt":"After we have created the basic structure of the game, we can start adding some interactivity to it. We will start with the most basic one,â€¦","body":"\nAfter we have created the basic structure of the game, we can start adding some interactivity to it. We will start with the most basic one, which is the main game loop.\nOur requirement is to have a game loop that will run every two seconds and will update the game state. JavaScript has `setInterval` function, which we can use to achieve this.\n\n```javascript {numberLines}\nsetInterval(() => {\n  // update game state\n}, 2000);\n```\n\nThe first thing we need to display and increment the current game on every state update.\nFor that we can use a variable called `today` and increment it on every state update.\n\n```javascript {numberLines}\nconst today = new Date();\n\nsetInterval(() => {\n  const currentDate = today.toLocaleDateString(\"en-US\");\n  const dayOfWeek = today.toLocaleDateString(\"en-US\", { weekday: \"long\" });\n\n  const todayDateElement = document.getElementById(\"today-date\");\n  const todayDayOfWeekElement = document.getElementById(\"today-day-of-week\");\n\n  todayDateElement.innerText = currentDate;\n  todayDayOfWeekElement.innerText = dayOfWeek;\n\n  today.setDate(today.getDate() + 1);\n}, 2000);\n```\n\nNext we add some colors to the day of week element, so it is easier to distinguish the days.\n\n```javascript {numberLines}\n...\nsetInterval(() => {\n  ...\n\n  if (dayOfWeekNum === 0) {\n      todayDayOfWeekElement.classList.add('sunday');\n  } else if (dayOfWeekNum === 6) {\n      todayDayOfWeekElement.classList.add('saturday');\n  } else {\n      todayDayOfWeekElement.classList.remove('sunday');\n      todayDayOfWeekElement.classList.remove('saturday');\n  }\n\n  today.setDate(today.getDate() + 1);\n}, 2000);\n```\n\n```css {numberLines}\n.today {\n  display: flex;\n  justify-content: space-between;\n}\n\n.day-of-week {\n  display: flex;\n  justify-content: center;\n  color: purple;\n}\n\n.sunday {\n  color: brown;\n  text-transform: uppercase;\n}\n\n.saturday {\n  color: brown;\n}\n\n.weekday {\n  color: black;\n}\n```\n\nAnd now we can see that the game is updating its current date every two seconds, with different styles for week days and weekends.\n\n![Change the date](./images/2023-09-26-the-businessman-basic-interactivity/date.gif)\n\nNow its time to add initial account balances and tax rates to the game. We will use `Math.random()` function to generate random numbers for the initial account balances and tax rates.\n\n`creditInterestRate` and `debitInterestRate` will be between 5% and 15% and `incomeTax` will be between 1% and 10%.\n\n```javascript {numberLines}\n...\nvar creditInterestRate = Math.random() * 10 + 5;\nvar debitInterestRate = Math.random() * 10 + 5;\nvar incomeTax = Math.random() * 9 + 1;\n...\n\nsetInterval(() => {\n  ...\n  const creditInterestRateElement = document.getElementById('credit-interest-rate');\n  const debitInterestRateElement = document.getElementById('debit-interest-rate');\n  const incomeTaxElement = document.getElementById('income-tax');\n\n  creditInterestRateElement.innerText = creditInterestRate.toFixed(0);\n  debitInterestRateElement.innerText = debitInterestRate.toFixed(0);\n  incomeTaxElement.innerText = incomeTax.toFixed(0);\n  ...\n}, 2000);\n```\n\nThe same way we can add initial account balances and other tax rates. I'm not going to post the entire code here, as it is available on [GitHub](https://github.com/smykhailov/the-businessman/releases/tag/v0.3).\n\nThe final result should look something like on the image below.\n\n![Initial account balances and tax rates](./images/2023-09-26-the-businessman-basic-interactivity/initial-account-balances-and-tax-rates.png)\n\nIf you look into the final code you will see that adding more and more functionality will lead us very quickly to the point where the code will become very hard to maintain.\nWe will fix this in the next article, where I'll introduce you to [basic refactoring techniquies](/articles/the-businessman-basics-of-refactoring/).\n","frontmatter":{"title":"The Businessman - Basic Interactivity","date":"2023-09-26T17:02:13.000Z","tags":["businessman","project"],"keywords":["html","css","javascript","the game"],"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#088888","images":{"fallback":{"src":"/static/a919f0df219d4b39618fbcb5fb541aa6/e26c0/cover.jpg","srcSet":"/static/a919f0df219d4b39618fbcb5fb541aa6/9969f/cover.jpg 150w,\n/static/a919f0df219d4b39618fbcb5fb541aa6/c5cb8/cover.jpg 300w,\n/static/a919f0df219d4b39618fbcb5fb541aa6/e26c0/cover.jpg 600w","sizes":"(min-width: 600px) 600px, 100vw"},"sources":[{"srcSet":"/static/a919f0df219d4b39618fbcb5fb541aa6/7ac8f/cover.webp 150w,\n/static/a919f0df219d4b39618fbcb5fb541aa6/9b1c6/cover.webp 300w,\n/static/a919f0df219d4b39618fbcb5fb541aa6/b4d10/cover.webp 600w","type":"image/webp","sizes":"(min-width: 600px) 600px, 100vw"}]},"width":600,"height":343}}}},"internal":{"contentFilePath":"/home/runner/work/sergii-dev/sergii-dev/articles/2023-09-26-the-businessman-basic-interactivity.mdx"},"fields":{"slug":"/articles/the-businessman-basic-interactivity/","readingTime":{"text":"3 min read","minutes":2.315,"time":138900}}}},"pageContext":{"id":"98be7fbf-e0c9-545a-8757-6fe310806953","frontmatter":{"title":"The Businessman - Basic Interactivity","date":"2023-09-26T17:02:13.000Z","published":true,"featuredImage":"./images/2023-09-26-the-businessman-basic-interactivity/cover.jpg","categories":["Businessman"],"tags":["businessman","project"],"keywords":["html","css","javascript","the game"]}}},"staticQueryHashes":["1739528850","3446427935"],"slicesMap":{}}