{"componentChunkName":"component---src-components-article-tsx-content-file-path-home-runner-work-sergii-dev-sergii-dev-articles-2024-04-24-the-businessman-end-month-logic-mdx","path":"/articles/the-businessman-end-month-logic/","result":{"data":{"site":{"siteMetadata":{"title":"Sergii Mykhailov","author":"Sergii Mykhailov"}},"mdx":{"excerpt":"This is the last part of the game logic. When the month ends (or, to simplify the logic of the end of the month detection, we will use theâ€¦","body":"\nThis is the last part of the game logic. When the month ends (or, to simplify the logic of the end of the month detection, we will use the 1st day of the month),\nthe all prices on the exchange and on the market must be updated. The assistant should remind the player about the amount of oil needed for the house heating.\nAll the interests should be paid and new tax and interest rates should be provided. The logic itself is not difficult, but we also need to pause the game\nwhen the month ends or when any dialog window opens. That brings some complexity to the logic, as the pause logic will be placed in a lot of functions,\nwhich adds a coupling and breaks Single Responsibility Principle. But we will refactor it later and I'll show much more effective methods to handle application maintainability.\n\nThere were two main changes made in this part of the game logic.\n\n## Pay Taxes\n\nThe first change is the `payTaxes` function. It is called when the month ends. The function is responsible for updating the account balance.\n\n```javascript {numberLines: 141}\nconst payTaxes = () => {\n  gameData.assets.oil.amount -= gameData.assistantData.oilToHeatHouse;\n\n  const oldAccountBalance = gameData.accountBalances.accountBalance;\n  if (gameData.accountBalances.netIncome > 0) {\n    gameData.accountBalances.accountBalance -=\n      (gameData.accountBalances.netIncome * gameData.interestRates.incomeTax) /\n      100;\n  }\n  gameData.accountBalances.accountBalance -=\n    (gameData.accountBalances.creditBalance *\n      gameData.interestRates.creditInterestRate) /\n    100;\n  gameData.accountBalances.accountBalance -=\n    (gameData.assets.house.price * gameData.taxes.houseTax) / 100;\n  gameData.accountBalances.accountBalance -=\n    (gameData.assets.land.amount *\n      gameData.assets.land.currentMonthPrice *\n      gameData.taxes.landTax) /\n    100;\n\n  const taxPaid = oldAccountBalance - gameData.accountBalances.accountBalance;\n  const infoDialogMsg = document.getElementById(\"info-message\");\n  infoDialogMsg.innerText = `You paid ${taxPaid.toFixed(0)} Grobls in taxes.`;\n  open(\"info-dialog\");\n};\n```\n\n## Update Prices and Rates\n\nThe second change are the set of functions to update interest and tax rates, they are called when the month ends.\n\n```javascript {numberLines: 109}\nif (today.getDate() === 1) {\n  gameData.accountBalances.accountBalance +=\n    (gameData.accountBalances.depositBalance *\n      gameData.interestRates.depositInterestRate) /\n    100;\n  payTaxes();\n\n  if (gameData.accountBalances.accountBalance < 0) {\n    clearInterval(currentGameHandler);\n    open(\"end-game\");\n    return;\n  }\n\n  gameData.interestRates = updateInterestRates();\n  gameData.taxes = updateTaxes();\n  gameData.availableHouses = updateHousePrices();\n  gameData.availableCars = updateCarPrices();\n  gameData.historicalExchangePrices[today.getMonth()] =\n    gameData.currentMonthExchangePrices = updateExchangePrices();\n  gameData.assistantData.oilToHeatHouse = Math.random() * 29 + 1;\n}\n```\n\nAll [other changes](https://github.com/smykhailov/the-businessman/compare/v0.16...v0.17) are just refactoring to support update logic.\n\n## Next Steps\n\nThis was the last part in this series. Now we have a fully functional game. If you compare the game we got with the original one,\nyou'll see it has less functionality and is less polished. The idea of my articles was to show how to build a game from scratch,\nwithout using any libraries and frameworks. And show how simple code quiclky becomes complex and hard to maintain. That was the main intention,\nnot game feature completeness.\n\nThe next steps will be to refactor the code to make it more maintainable and to add more features to the game. The idea is to show how we can\nitteratively improve the code and add new features without breaking the existing ones. And how to add abstractions, which helps to hide complexities\nand make code reusable. Stay tuned for the next articles.\n","frontmatter":{"title":"The Businessman - End of the Month Logic","date":"2024-04-22T19:22:09.000Z","tags":["businessman","project","javascript"],"keywords":["business logic","javascript","the game","end of the month"],"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#d8d8d8","images":{"fallback":{"src":"/static/ba17be608a798291720ec98e26e8856b/4884d/cover.jpg","srcSet":"/static/ba17be608a798291720ec98e26e8856b/cdc62/cover.jpg 150w,\n/static/ba17be608a798291720ec98e26e8856b/42383/cover.jpg 300w,\n/static/ba17be608a798291720ec98e26e8856b/4884d/cover.jpg 600w","sizes":"(min-width: 600px) 600px, 100vw"},"sources":[{"srcSet":"/static/ba17be608a798291720ec98e26e8856b/3e779/cover.webp 150w,\n/static/ba17be608a798291720ec98e26e8856b/bf45f/cover.webp 300w,\n/static/ba17be608a798291720ec98e26e8856b/c3418/cover.webp 600w","type":"image/webp","sizes":"(min-width: 600px) 600px, 100vw"}]},"width":600,"height":333}}}},"internal":{"contentFilePath":"/home/runner/work/sergii-dev/sergii-dev/articles/2024-04-24-the-businessman-end-month-logic.mdx"},"fields":{"slug":"/articles/the-businessman-end-month-logic/","readingTime":{"text":"3 min read","minutes":2.45,"time":147000}}}},"pageContext":{"id":"8f84c446-0a48-5519-b43a-5a53c990be87","frontmatter":{"title":"The Businessman - End of the Month Logic","date":"2024-04-22T19:22:09.000Z","published":true,"featuredImage":"./images/2024-04-24-the-businessman-end-month-logic/cover.jpg","categories":["Businessman"],"tags":["businessman","project","javascript"],"keywords":["business logic","javascript","the game","end of the month"]}}},"staticQueryHashes":["1739528850","3446427935"],"slicesMap":{}}