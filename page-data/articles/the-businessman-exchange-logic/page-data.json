{"componentChunkName":"component---src-components-article-tsx-content-file-path-home-runner-work-sergii-dev-sergii-dev-articles-2024-02-10-the-businessman-exchange-logic-mdx","path":"/articles/the-businessman-exchange-logic/","result":{"data":{"site":{"siteMetadata":{"title":"Sergii Mykhailov","author":"Sergii Mykhailov"}},"mdx":{"excerpt":"After we implemented the bank logic, we can move to the next part of the game, which is the Exchange. The exchange logic will be similar inâ€¦","body":"\nAfter we implemented the [bank logic](/articles/the-businessman-bank-logic), we can move to the next part of the game, which is the **Exchange**.\nThe exchange logic will be similar in complexity to the bank logic, but we will be able to reuse some techniques and code from the bank logic.\n\nThere is no so many changes in compare to the one we did in the bank logic, but as I shown in the previous article, you can look through all the changes\njust by using GitHub's [compare feature](https://github.com/smykhailov/the-businessman/compare/v0.12...v0.13).\n\n## UI changes\n\nThe modifications we need to make are very small and straightforward, and they do not affect the overall structure of our code.\nWe can apply the same approach that we have already implemented for the bank logic, which has proven to be effective and reliable.\n\n```html {numberLines: 331}\n<div id=\"buy-land\" class=\"hidden text-smaller text-color-turquoise\">\n  <div>\n    <label for=\"amount-land-buy\">\n      How much land do you want to buy:\n      <input\n        id=\"amount-land-buy\"\n        title=\"Amount of land to buy\"\n        type=\"number\"\n        min=\"1\"\n        class=\"text-color-turquoise\"\n      />\n    </label>\n  </div>\n</div>\n<div id=\"buy-oil\" class=\"hidden text-smaller text-color-turquoise\">\n  <div>\n    <label for=\"amount-oil-buy\">\n      How much oil do you want to buy:\n      <input\n        id=\"amount-oil-buy\"\n        title=\"Amount of oil to buy\"\n        type=\"number\"\n        min=\"0\"\n        class=\"text-color-turquoise\"\n      />\n    </label>\n  </div>\n</div>\n<p id=\"exchange-error\" class=\"text-smaller text-color-red\"></p>\n```\n\n## Handling exchange buy logic\n\nThe logic to buy goods is similar to the one which we used in the bank logic.\nBased on \"o\" or \"l\" key press, we will show the prompt to buy oil or land.\nAnd on \"Enter\" or \"Tab\" key press, we will process the purchase.\n\nIn this section, we will explain how to implement the logic for buying goods in our game.\nThe logic for buying goods is similar to the one which we used in the bank logic,\nbut with some differences. We will use the \"o\" or \"l\" keys to let the user choose between buying\noil or land, respectively. Then, we will display a prompt that asks the user how much oil or land\nplayer wants to buy, and the price per unit. The player can enter the amount they want to buy\nand press the \"Enter\" or \"Tab\" keys to confirm their purchase.\n\n```js {numberLines: 537, diff}\nconst assignExchangeWindowActions = () => {\n  let buyLandProcessing = false;\n  let buyOilProcessing = false;\n\n  document.addEventListener(\n    \"keydown\",\n    e => {\n      const exchangeWindow = document.getElementById(\"exchange-main\");\n      if (exchangeWindow.classList.contains(\"hidden\")) {\n        return;\n      }\n\n      const buyLandKeyBinding = \"l\";\n      const buyOilKeyBinding = \"o\";\n\n      ...\n\n      const cleanPrompts = () => {  // L559\n        ...\n\n        buyLandProcessing = false;  // L568\n        buyOilProcessing = false;\n      };\n\n      if (\n        e.key === buyLandKeyBinding ||\n        (e.key === buyLandKeyBinding.toUpperCase() && e.shiftKey)\n      ) {\n        if (buyOilProcessing) {\n          return;\n        }\n\n        buyLand.classList.remove(\"hidden\");\n        amountLandToBuy.focus();\n\n        buyLandProcessing = true;\n      }\n\n      if (\n        e.key === buyOilKeyBinding ||\n        (e.key === buyOilKeyBinding.toUpperCase() && e.shiftKey)\n      ) {\n        if (buyLandProcessing) {\n          return;\n        }\n\n        buyOil.classList.remove(\"hidden\");\n        amountOilToBuy.focus();\n\n        buyOilProcessing = true;\n      }\n\n      if (e.key === \"Enter\" || e.key === \"Tab\") {\n        if (buyLandProcessing) {\n          ...\n        }   //L611\n\n        if (buyOilProcessing) {\n          ...\n        }  //L629\n\n\n        cleanPrompts();\n        document.getElementById(\"exchange-main\").classList.add(\"hidden\");\n      }\n\n      if (e.key === \"Escape\") {\n        cleanPrompts();\n      }\n    },\n    true\n  );\n};\n\nconst assignActionHandlers = () => {\n  assignBankWindowActions();\n+   assignExchangeWindowActions();\n};\n```\n\nThe purchase will be processed by checking if the user has enough money and updating their inventory accordingly.\nIf the user does not have enough money, an error message will be shown. We will also handle some edge cases, such as invalid inputs or zero amounts.\n\nHere is the logic to handle the purchase of land:\n\n```js {numberLines: 595}\nif (buyLandProcessing) {\n  const amountValue = +amountLandToBuy.value;\n  const totalLandPrice = amountValue * gameData.currentMonthExchangePrices.land;\n\n  if (totalLandPrice > gameData.accountBalances.accountBalance) {\n    amountLandToBuy.value = \"\";\n    exchangeError.innerText = \"You do not have enough money.\";\n    return;\n  }\n\n  if (amountValue > 0) {\n    gameData.assets.land.amount += amountValue;\n    gameData.accountBalances.accountBalance -= totalLandPrice;\n  } else {\n    return;\n  }\n}\n```\n\nAnd absolutely the same logic, just with different name of input fields to purchase oil:\n\n```js {numberLines: 613}\nif (buyOilProcessing) {\n  const amountValue = +amountOilToBuy.value;\n  const totalOilPrice = amountValue * gameData.currentMonthExchangePrices.oil;\n\n  if (totalOilPrice > gameData.accountBalances.accountBalance) {\n    amountOilToBuy.value = \"\";\n    exchangeError.innerText = \"You do not have enough money.\";\n    return;\n  }\n\n  if (amountValue > 0) {\n    gameData.assets.oil.amount += amountValue;\n    gameData.accountBalances.accountBalance -= totalOilPrice;\n  } else {\n    return;\n  }\n}\n```\n\nthe last step is to update the UI with the new values:\n\n```js {numberLines: 631}\nsetAccountsBalance(gameData.accountBalances);\n```\n\nThis concludes our tutorial on how to implement the exchange logic for our application.\nI hope you have learned something useful and enjoyed this lesson. If you have any questions or\nfeedback, please feel free to leave the comment.\n\n## Summary\n\nThe sources of the changes as usual are on [GiHub](https://github.com/smykhailov/the-businessman/releases/tag/v0.13).\n\nIn the next article, we will implement the logic for the [**Market**](/articles/the-businessman-market-logic). It will be simpler as we already have a lot of code to reuse.\n","frontmatter":{"title":"The Businessman - Exchange Logic","date":"2024-02-10T14:14:03.000Z","tags":["businessman","project","javascript"],"keywords":["business logic","javascript","the game","github compare","exchange logic","exchange"],"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#0808f8","images":{"fallback":{"src":"/static/0941fd355a0080d6a8ae382897008b87/92cfc/cover.png","srcSet":"/static/0941fd355a0080d6a8ae382897008b87/c3add/cover.png 150w,\n/static/0941fd355a0080d6a8ae382897008b87/ad250/cover.png 300w,\n/static/0941fd355a0080d6a8ae382897008b87/92cfc/cover.png 600w","sizes":"(min-width: 600px) 600px, 100vw"},"sources":[{"srcSet":"/static/0941fd355a0080d6a8ae382897008b87/f5103/cover.webp 150w,\n/static/0941fd355a0080d6a8ae382897008b87/5d6c3/cover.webp 300w,\n/static/0941fd355a0080d6a8ae382897008b87/3cf29/cover.webp 600w","type":"image/webp","sizes":"(min-width: 600px) 600px, 100vw"}]},"width":600,"height":341}}}},"internal":{"contentFilePath":"/home/runner/work/sergii-dev/sergii-dev/articles/2024-02-10-the-businessman-exchange-logic.mdx"},"fields":{"slug":"/articles/the-businessman-exchange-logic/","readingTime":{"text":"4 min read","minutes":3.88,"time":232800}}}},"pageContext":{"id":"5bbfc717-bbd7-572a-a83b-26cb7a1d96b9","frontmatter":{"title":"The Businessman - Exchange Logic","date":"2024-02-10T14:14:03.000Z","published":true,"featuredImage":"./images/2024-02-10-the-businessman-exchange-logic/cover.png","categories":["Businessman"],"tags":["businessman","project","javascript"],"keywords":["business logic","javascript","the game","github compare","exchange logic","exchange"]}}},"staticQueryHashes":["1739528850","3446427935"],"slicesMap":{}}