{"componentChunkName":"component---src-components-article-tsx-content-file-path-home-runner-work-sergii-dev-sergii-dev-articles-2023-02-27-how-to-start-dev-career-mdx","path":"/articles/how-to-start-dev-career/","result":{"data":{"site":{"siteMetadata":{"title":"Sergii Mykhailov","author":"Sergii Mykhailov"}},"mdx":{"excerpt":"I got a lot of questions about how to start a developer's career. I decided to write a post about it. I hope it will be useful for you. Letâ€¦","body":"\nI got a lot of questions about how to start a developer's career. I decided to write a post about it. I hope it will be useful for you. Let's start.\n\n## Learn the basics of programming\n\nThe first step is to learn the basics of programming. You can start with any programming language. I recommend to go with JavaScript and Web development. Why? Because it's easy to start and you can learn a lot of things. In addition, you need no tools to start. Only browser's developer tools needed to learn the basics and start experimenting.\n\nLearn language statements, operations, basic algorithms and data structures. That helps to build foundation for the future career. Also learn about compilers, interpreters, and other transpilers. It's important to understand how the code is executed.\n\n## Learn the basics of JavaScript and Web development\n\nStart with [basics of the web](https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web). It's a great resource to learn the basics of the web. After that, you can start learning the basics of [JavaScript](https://developer.mozilla.org/en-US/docs/Learn/JavaScript). And proceed with [HTML](https://developer.mozilla.org/en-US/docs/Learn/HTML) and [CSS](https://developer.mozilla.org/en-US/docs/Learn/CSS). I also recommend to go through [Web Fundamentals](https://developers.google.com/web/fundamentals/).\n\nThe above information should be enough to start building the first website.\n\n## Learn tooling\n\nAfter you learn the basics of programming, you need to learn which tools exists to make the developer's process easier and more efficient. First of all, you need to learn how to use a terminal. It's a must-have tool for every developer.\n\nThere are quite a few terminals for different operating systems. I recommend to use [iTerm2](https://iterm2.com/) for macOS and [Windows Terminal](https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701) for Windows.\n\nThe next tool in your arsenal is a text editor. You can use any text editor you want. I recommend to use [Visual Studio Code](https://code.visualstudio.com/). It's a great tool for web (or any other) development. It has a lot of extensions and it's free.\n\nTo be able to track your work, you can't live without [Git](https://git-scm.com/). It's a version control system. You can start with [Git Basics](https://git-scm.com/book/en/v2/Getting-Started-Git-Basics). After that, you can go through [Git Branching](https://learngitbranching.js.org/).\n\nIt's will be to difficult to implement everything yourself from scratch. That's why you need to learn how to use [npm](https://www.npmjs.com/). It's a package manager for JavaScript. You can start with [npm Basics](https://docs.npmjs.com/getting-started/what-is-npm). npm is a part of [Node.js](https://nodejs.org/en/), which you need to have on your machine too. I recommend to install it with Node Version Manager [macOS and Linux](https://github.com/nvm-sh/nvm) and [Windows](https://github.com/coreybutler/nvm-windows).\n\nWith time, you'll build your own set of tools which you use every day. But for now, this is enough.\n\n## Constantly learn new things\n\nRemember, learning is a lifelong process, and there are many different ways to learn. Find what works best for you and make a habit of constantly seeking out new knowledge and experiences. There are many ways to learn. Read books, articles, and blogs on topics that interest you. There is a wealth of information available on the internet, and reading is a great way to absorb new ideas and knowledge. Attend workshops, conferences, and training sessions to learn about new topics and to meet people who share your interests. Enroll in courses, either online or in-person, to learn new skills or to deepen your knowledge of a particular subject. Watch tutorials and instructional videos on websites like YouTube to learn new skills. Listen to podcasts on topics that interest you. This is a great way to learn while you're on the go or doing other activities. Join a community of like-minded individuals who share your interests. This can be a great way to learn from others and to exchange ideas.\n\nPractice what you learn. Whether it's a new skill or a new concept, practicing is essential for retaining and applying new knowledge. Keep a journal to reflect on what you've learned and to set goals for what you want to learn next.\n\n## Develop soft skills\n\nSoft skills are very important for every developer. You need to be able to communicate with your team members, stakeholders, and clients. You need to be able to explain your ideas and thoughts. You need to be able to listen to other people and understand their point of view. Remember, developing soft skills takes time and effort. But by being intentional about your development and seeking out opportunities to practice, you can enhance your soft skills and become a more effective communicator, collaborator, and leader.\n\nStart by identifying the soft skills you want to develop. Soft skills include communication, teamwork, problem-solving, leadership, time management, and many others. One of the most important soft skills is listening. Practice active listening by paying attention to what others are saying and asking questions to clarify understanding. Collaboration is an important soft skill that involves working with others to achieve a common goal. Seek feedback from others to learn how you can improve your soft skills. This can be from your colleagues, friends, or even a mentor. Observe how others demonstrate soft skills and learn from them. This can be through watching how others communicate, collaborate, or lead.\nSoft skills are developed through practice, so make a conscious effort to practice regularly. This can be through role-playing, volunteering, or taking on new challenges. Practice makes perfect, so don't be afraid to make mistakes. Mistakes are a great way to learn and improve.\n\n## Start your own projects\n\nIt is difficult to learn something effectively if you don't have a goal or real task. Learning based on synthetic artificial task is good as starting point, but not very effective. That's why you need to start your own projects. It can be a website, a mobile app, a game, a tool, etc. It doesn't matter what it is. The main thing is to start doing it. It's a great way to learn new things and improve your skills.\n\n## Contribute to open-source projects\n\nCollaborating on an open source project can be a rewarding experience that allows you to contribute to a project and improve your coding skills. Register yourself on [GitHub](https://github.com/) and start contributing to open-source projects. It's a great way to learn new things and improve your skills. Find the project which you like or use in your day-to-day life. And start contributing to it. Improve, propose new features, fix bugs, etc. That helps to develop the new skills, improve communication, and learn build network.\n\nTake the time to understand the project's goals, structure, and coding conventions. Read the project's documentation, including the README file and CONTRIBUTING file. Look for tasks or issues that are labeled as \"good first issues\" or \"help wanted.\" These tasks are usually easier to tackle and a good way to get started.\n\nIntroduce yourself to the project's community. Join the project's communication channels, such as mailing lists, forums, or chat rooms. Be polite, respectful, and transparent about your skills and experience.\n\nCreate a fork of the project on your own account. This will allow you to work on the project without affecting the original codebase. Create a new branch on your fork that corresponds to the issue you want to work on. Make changes and commits to your branch. Once you have made changes, create a pull request to submit your changes to the original project. Describe the changes you made, why they are important, and any issues you encountered. The project maintainers will review your pull request and provide feedback. Make changes and respond to comments as needed. Once the maintainers approve your pull request, your changes will be merged into the project.\n\nRemember, collaborating on an open source project requires patience, communication, and a willingness to learn. Start small, ask for help, and be respectful of the project's community and conventions. By contributing to open source projects, you can improve your coding skills, learn from others, and make a positive impact on the software development community.\n\n## Summary\n\nLearning and reading is great, but without practice, you won't be able to become a good developer. So, start doing the thing today, start them now. Open your browser and experiment in developer tools. Install the tools which I mentioned above and experiment, build, ask questions, fail, fix, repeat, etc. And don't forget to have fun.\n","frontmatter":{"title":"How to start developer's career","date":"2023-02-27T20:29:47.000Z","tags":["engineering","career"],"keywords":["engineering","career","fundamentals","development","software"],"featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8e8d8","images":{"fallback":{"src":"/static/0d6ede7d0b9700041d967a95cbfb8874/3f4ea/cover.jpg","srcSet":"/static/0d6ede7d0b9700041d967a95cbfb8874/f1a3a/cover.jpg 150w,\n/static/0d6ede7d0b9700041d967a95cbfb8874/81bf6/cover.jpg 300w,\n/static/0d6ede7d0b9700041d967a95cbfb8874/3f4ea/cover.jpg 600w","sizes":"(min-width: 600px) 600px, 100vw"},"sources":[{"srcSet":"/static/0d6ede7d0b9700041d967a95cbfb8874/70dfd/cover.webp 150w,\n/static/0d6ede7d0b9700041d967a95cbfb8874/9b21f/cover.webp 300w,\n/static/0d6ede7d0b9700041d967a95cbfb8874/9ff6b/cover.webp 600w","type":"image/webp","sizes":"(min-width: 600px) 600px, 100vw"}]},"width":600,"height":400}}}},"internal":{"contentFilePath":"/home/runner/work/sergii-dev/sergii-dev/articles/2023-02-27-how-to-start-dev-career.mdx"},"fields":{"slug":"/articles/how-to-start-dev-career/","readingTime":{"text":"7 min read","minutes":6.775,"time":406500}}}},"pageContext":{"id":"f1b68566-577e-588b-8cc5-cc67ee4263c7","frontmatter":{"title":"How to start developer's career","date":"2023-02-27T20:29:47.000Z","published":true,"featuredImage":"./images/2023-02-27-how-to-start-dev-career/cover.jpg","categories":["Development","Fundamentals"],"tags":["engineering","career"],"keywords":["engineering","career","fundamentals","development","software"]}}},"staticQueryHashes":["1739528850","3446427935"],"slicesMap":{}}