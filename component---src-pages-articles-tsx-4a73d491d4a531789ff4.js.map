{"version":3,"file":"component---src-pages-articles-tsx-4a73d491d4a531789ff4.js","mappings":"yOAWA,MAAMA,EAAMC,IAIuD,IAJtD,KACXC,EAAI,MACJC,EAAK,MACLC,GAC4DH,EAC5D,MAAM,GACJI,EACAC,QAAQ,KAAEC,EAAI,YAAEC,GAChBC,aAAa,MAAEC,EAAK,KAAEC,EAAI,KAAEC,IAC1BV,EAAKW,MAAMV,GAAOW,KAEtB,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAe,CACdX,GAAIA,EACJY,IAAKZ,EACLE,KAAMA,EACNG,MAAOA,EACPC,KAAMA,EACNO,WAAYV,aAAW,EAAXA,EAAaW,KACzBP,KAAMA,EACNR,MAAOA,GACP,EAIAgB,EAGDC,IACH,MAAM,MAAER,GAAUQ,EAAMnB,KAAKoB,QACvB,EAACC,EAAmB,EAAEC,IAC1BC,EAAAA,EAAAA,WAAkB,GAEpB,OACEV,EAAAA,EAAAA,IAACW,EAAAA,EAAgB,CAAChB,MAAM,WAAWiB,cAAeJ,IAChDR,EAAAA,EAAAA,IAACa,EAAAA,EAAS,MACPC,IAAA,IAAC,OAAEC,EAAM,MAAEC,GAAOF,EAAA,OACjBd,EAAAA,EAAAA,IAACiB,EAAAA,GAAI,CACHF,OAAQA,EACRG,UAAWpB,EAAMqB,OACjBC,SAAU,CAAEC,SAAUf,EAAMe,SAAUvB,SACtCwB,SAAU,IACVN,MAAOA,EACPO,SAAUC,GAAKf,EAAuBe,EAAEC,aAAe,IAEtDxC,EACI,IAGM,EAwCtBoB,EAAqBqB,MAAQC,EAAAA,EAE9B,YAEO,MAAMC,EAAkDtB,IAAS,IAAAuB,EACtE,MAAMC,EAA8B,QAAlBD,EAAGvB,EAAMnB,KAAK4C,YAAI,IAAAF,OAAA,EAAfA,EAAiBC,aACtC,OACE9B,EAAAA,EAAAA,IAACgC,EAAAA,EAAG,CACFrC,MAAK,cAAgBmC,EAAanC,MAClCsC,YAAW,cAAgBH,EAAanC,MACxCuC,SAAUJ,EAAaI,SACvBC,OAAQL,EAAaK,QACrB,C","sources":["webpack://sergii-dev/./src/pages/articles.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport { graphql, HeadFC } from \"gatsby\";\n\nimport { FixedSizeList as List, ListChildComponentProps } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nimport ArticlesList from \"@components/left-pane/articles-list\";\nimport ContentContainer from \"@components/content\";\nimport ArticleListItem from \"@components/article-list-item\";\nimport SEO from \"@components/seo\";\n\nconst Row = ({\n  data,\n  index,\n  style,\n}: ListChildComponentProps<{ location: Location; edges: any }>) => {\n  const {\n    id,\n    fields: { slug, readingTime },\n    frontmatter: { title, date, tags },\n  } = data.edges[index].node;\n\n  return (\n    <ArticleListItem\n      id={id}\n      key={id}\n      slug={slug!}\n      title={title!}\n      date={date!}\n      timeToRead={readingTime?.text!}\n      tags={tags}\n      style={style}\n    />\n  );\n};\n\nconst ArticlesPage: FC<{\n  data: GatsbyTypes.ArticlesPageDataQuery;\n  location: Location;\n}> = props => {\n  const { edges } = props.data.allMdx;\n  const [shouldDisplayShadow, setShouldDisplayShadow] =\n    useState<boolean>(false);\n\n  return (\n    <ContentContainer title=\"Articles\" displayShadow={shouldDisplayShadow}>\n      <AutoSizer>\n        {({ height, width }) => (\n          <List\n            height={height}\n            itemCount={edges.length}\n            itemData={{ location: props.location, edges }}\n            itemSize={152}\n            width={width}\n            onScroll={e => setShouldDisplayShadow(e.scrollOffset > 0)}\n          >\n            {Row}\n          </List>\n        )}\n      </AutoSizer>\n    </ContentContainer>\n  );\n};\n\nexport const query = graphql`\n  query ArticlesPageData {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        keywords\n      }\n    }\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n            readingTime {\n              text\n              minutes\n              time\n            }\n          }\n          frontmatter {\n            title\n            date\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\n(ArticlesPage as any).Aside = ArticlesList;\n\nexport default ArticlesPage;\n\nexport const Head: HeadFC<GatsbyTypes.ArticlesPageDataQuery> = props => {\n  const siteMetadata = props.data.site?.siteMetadata!;\n  return (\n    <SEO\n      title={`Articles | ${siteMetadata.title}`}\n      description={`Articles | ${siteMetadata.title}`}\n      keywords={siteMetadata.keywords}\n      author={siteMetadata.author}\n    />\n  );\n};\n"],"names":["Row","_ref","data","index","style","id","fields","slug","readingTime","frontmatter","title","date","tags","edges","node","___EmotionJSX","ArticleListItem","key","timeToRead","text","ArticlesPage","props","allMdx","shouldDisplayShadow","setShouldDisplayShadow","useState","ContentContainer","displayShadow","AutoSizer","_ref2","height","width","List","itemCount","length","itemData","location","itemSize","onScroll","e","scrollOffset","Aside","ArticlesList","Head","_props$data$site","siteMetadata","site","SEO","description","keywords","author"],"sourceRoot":""}