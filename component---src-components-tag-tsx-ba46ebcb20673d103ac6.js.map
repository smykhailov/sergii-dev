{"version":3,"file":"component---src-components-tag-tsx-ba46ebcb20673d103ac6.js","mappings":"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","sources":["webpack://sergii-dev/./src/components/left-pane/tags-list.tsx","webpack://sergii-dev/./src/components/tag.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport slugify from \"slugify\";\nimport styled from \"@emotion/styled\";\n\nimport LeftPaneContainer from \"./left-pane-container\";\nimport { isRouteActive } from \"@core/routing\";\n\nconst TagsList: FC<{ location: Location }> = props => {\n  const { distinct: tags, group } = useTagsListQuery();\n  const [offsetTop, setOffsetTop] = useState(0);\n  const activeLi = React.useRef<HTMLLIElement>(null);\n\n  useEffect(() => {\n    setOffsetTop(activeLi?.current?.offsetTop || 0);\n  }, [activeLi]);\n\n  return (\n    <LeftPaneContainer title=\"Tags\" offsetTop={offsetTop}>\n      <Tags>\n        {tags.map((tag: string, idx: number) => {\n          const slug = `/tags/${slugify(tag).toLocaleLowerCase()}`;\n          const articlesCount = group[idx]?.totalCount || 0;\n          let amountOfArticles = \"There is no articles with this tag yet\";\n\n          if (articlesCount > 0) {\n            if (articlesCount === 1) {\n              amountOfArticles = \"1 article\";\n            } else {\n              amountOfArticles = `${articlesCount} articles`;\n            }\n          }\n\n          const isActive = isRouteActive(slug, props.location);\n\n          return (\n            <li key={slug} ref={isActive ? activeLi : null}>\n              <Link\n                to={slug}\n                className={isActive ? \"active\" : undefined}\n                title={tag}\n              >\n                <p>\n                  <strong>{tag}</strong>\n                </p>\n                <p>{amountOfArticles}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </Tags>\n    </LeftPaneContainer>\n  );\n};\n\nconst useTagsListQuery = () => {\n  const { allMdx } = useStaticQuery<GatsbyTypes.TagsListQuery>(graphql`\n    query TagsList {\n      allMdx(\n        sort: { frontmatter: { tags: ASC } }\n        filter: { frontmatter: { published: { eq: true } } }\n      ) {\n        distinct(field: { frontmatter: { tags: SELECT } })\n        group(field: { frontmatter: { tags: SELECT } }) {\n          totalCount\n        }\n      }\n    }\n  `);\n\n  return allMdx;\n};\n\nconst Tags = styled.ul(props => ({\n  \"& > li > a\": {\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: props.theme.colors.leftPane.textColor,\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    border: \"solid 1px transparent\",\n  },\n  \"& > li > a:hover\": {\n    backgroundColor: props.theme.colors.leftPane.backgroundColorHover,\n    border: props.theme.colors.borderHover,\n    color: props.theme.colors.leftPane.textColorHover,\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n  },\n\n  \"& > li > a.active\": {\n    backgroundColor: props.theme.colors.leftPane.backgroundColorActive,\n    border: props.theme.colors.borderActive,\n    color: props.theme.colors.leftPane.textColorActive,\n  },\n\n  \"& > li > a strong\": {\n    fontWeight: \"bold\",\n  },\n\n  \"& > li > a span\": {\n    marginLeft: 16,\n    fontSize: 11,\n    opacity: 0.85,\n  },\n\n  \"& > li > a > p\": {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nexport default TagsList;\n","import React, { FC, useState } from \"react\";\n\nimport { graphql, HeadFC } from \"gatsby\";\n\nimport { FixedSizeList as List, ListChildComponentProps } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport TagsList from \"./left-pane/tags-list\";\nimport ContentContainer from \"./content\";\nimport ArticleListItem from \"./article-list-item\";\nimport SEO from \"./seo\";\n\nconst Row = ({\n  data,\n  index,\n  style,\n}: ListChildComponentProps<{ location: Location; edges: any }>) => {\n  const {\n    id,\n    fields: { slug, readingTime },\n    frontmatter: { title, date, tags },\n  } = data.edges[index].node;\n\n  return (\n    <ArticleListItem\n      id={id}\n      key={id}\n      slug={slug!}\n      title={title!}\n      date={date!}\n      timeToRead={readingTime?.text!}\n      tags={tags}\n      style={style}\n    />\n  );\n};\n\nconst Tag: FC<{\n  data: GatsbyTypes.CategoryArticlesByCategoryQuery;\n  pageContext: {\n    tag: string;\n  };\n  location: Location;\n}> = props => {\n  const { edges } = props.data.allMdx;\n  const [shouldDisplayShadow, setShouldDisplayShadow] =\n    useState<boolean>(false);\n\n  return (\n    <ContentContainer\n      title={`#${props.pageContext.tag}`}\n      displayShadow={shouldDisplayShadow}\n    >\n      <AutoSizer>\n        {({ height, width }) => (\n          <List\n            height={height}\n            itemCount={edges.length}\n            itemData={{ location: props.location, edges }}\n            itemSize={154}\n            width={width}\n            onScroll={e => setShouldDisplayShadow(e.scrollOffset > 0)}\n          >\n            {Row}\n          </List>\n        )}\n      </AutoSizer>\n    </ContentContainer>\n  );\n};\n\nexport const query = graphql`\n  query CategoryArticlesByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { eq: $tag }, published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n            readingTime {\n              text\n              minutes\n              time\n            }\n          }\n          frontmatter {\n            title\n            date\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\n(Tag as any).Aside = TagsList;\n\nexport default Tag;\n\nexport const Head: HeadFC<\n  GatsbyTypes.CategoryArticlesByCategoryQuery,\n  { tag: string }\n> = props => {\n  const siteMetadata = props.data.site?.siteMetadata!;\n  return (\n    <SEO\n      title={`Tag | ${props.pageContext.tag}`}\n      author={siteMetadata.author}\n      keywords={props.pageContext.tag}\n      description={props.pageContext.tag}\n    />\n  );\n};\n"],"names":["useTagsListQuery","allMdx","useStaticQuery","Tags","_styled","target","props","display","flexDirection","color","theme","colors","leftPane","textColor","paddingTop","paddingBottom","paddingLeft","paddingRight","border","backgroundColor","backgroundColorHover","borderHover","textColorHover","textDecoration","cursor","backgroundColorActive","borderActive","textColorActive","fontWeight","marginLeft","fontSize","opacity","justifyContent","distinct","tags","group","offsetTop","setOffsetTop","useState","activeLi","React","useEffect","_activeLi$current","current","___EmotionJSX","LeftPaneContainer","title","map","tag","idx","_group$idx","slug","slugify","toLocaleLowerCase","articlesCount","totalCount","amountOfArticles","isActive","isRouteActive","location","key","ref","Link","to","className","undefined","Row","_ref","data","index","style","id","fields","readingTime","frontmatter","date","edges","node","ArticleListItem","timeToRead","text","Tag","shouldDisplayShadow","setShouldDisplayShadow","ContentContainer","pageContext","displayShadow","AutoSizer","_ref2","height","width","List","itemCount","length","itemData","itemSize","onScroll","e","scrollOffset","Aside","TagsList","Head","_props$data$site","siteMetadata","site","SEO","author","keywords","description"],"sourceRoot":""}