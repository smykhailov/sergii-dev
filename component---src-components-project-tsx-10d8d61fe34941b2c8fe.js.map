{"version":3,"file":"component---src-components-project-tsx-10d8d61fe34941b2c8fe.js","mappings":"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","sources":["webpack://sergii-dev/./node_modules/extend/index.js","webpack://sergii-dev/./src/components/left-pane/projects-list.tsx","webpack://sergii-dev/./node_modules/unist-util-stringify-position/lib/index.js","webpack://sergii-dev/./node_modules/vfile-message/lib/index.js","webpack://sergii-dev/./node_modules/vfile/lib/minpath.browser.js","webpack://sergii-dev/./node_modules/vfile/lib/minproc.browser.js","webpack://sergii-dev/./node_modules/vfile/lib/minurl.shared.js","webpack://sergii-dev/./node_modules/vfile/lib/minurl.browser.js","webpack://sergii-dev/./node_modules/vfile/lib/index.js","webpack://sergii-dev/./node_modules/bail/index.js","webpack://sergii-dev/./node_modules/is-plain-obj/index.js","webpack://sergii-dev/./node_modules/trough/index.js","webpack://sergii-dev/./node_modules/unified/lib/index.js","webpack://sergii-dev/./node_modules/mdast-util-to-string/lib/index.js","webpack://sergii-dev/./node_modules/micromark-util-chunked/index.js","webpack://sergii-dev/./node_modules/micromark-util-combine-extensions/index.js","webpack://sergii-dev/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://sergii-dev/./node_modules/micromark-util-character/index.js","webpack://sergii-dev/./node_modules/micromark-factory-space/index.js","webpack://sergii-dev/./node_modules/micromark/lib/initialize/content.js","webpack://sergii-dev/./node_modules/micromark/lib/initialize/document.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://sergii-dev/./node_modules/micromark-util-subtokenize/index.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/content.js","webpack://sergii-dev/./node_modules/micromark/lib/initialize/flow.js","webpack://sergii-dev/./node_modules/micromark/lib/initialize/text.js","webpack://sergii-dev/./node_modules/micromark-util-resolve-all/index.js","webpack://sergii-dev/./node_modules/micromark/lib/create-tokenizer.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/list.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://sergii-dev/./node_modules/micromark-factory-destination/index.js","webpack://sergii-dev/./node_modules/micromark-factory-label/index.js","webpack://sergii-dev/./node_modules/micromark-factory-title/index.js","webpack://sergii-dev/./node_modules/micromark-factory-whitespace/index.js","webpack://sergii-dev/./node_modules/micromark-util-normalize-identifier/index.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://sergii-dev/./node_modules/micromark-util-html-tag-name/index.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://sergii-dev/./node_modules/decode-named-character-reference/index.dom.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://sergii-dev/./node_modules/micromark-util-classify-character/index.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://sergii-dev/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://sergii-dev/./node_modules/micromark/lib/constructs.js","webpack://sergii-dev/./node_modules/micromark/lib/parse.js","webpack://sergii-dev/./node_modules/micromark/lib/preprocess.js","webpack://sergii-dev/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://sergii-dev/./node_modules/micromark-util-decode-string/index.js","webpack://sergii-dev/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://sergii-dev/./node_modules/micromark/lib/postprocess.js","webpack://sergii-dev/./node_modules/remark-parse/index.js","webpack://sergii-dev/./node_modules/remark-parse/lib/index.js","webpack://sergii-dev/./node_modules/micromark-util-sanitize-uri/index.js","webpack://sergii-dev/./node_modules/unist-util-is/lib/index.js","webpack://sergii-dev/./node_modules/unist-util-visit/node_modules/unist-util-visit-parents/lib/index.js","webpack://sergii-dev/./node_modules/unist-util-visit/lib/index.js","webpack://sergii-dev/./node_modules/unist-util-position/lib/index.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-definitions/lib/index.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://sergii-dev/./node_modules/trim-lines/index.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/state.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/unist-util-generated/lib/index.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js","webpack://sergii-dev/./node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js","webpack://sergii-dev/./node_modules/remark-rehype/lib/index.js","webpack://sergii-dev/./node_modules/property-information/lib/util/schema.js","webpack://sergii-dev/./node_modules/property-information/lib/util/merge.js","webpack://sergii-dev/./node_modules/property-information/lib/normalize.js","webpack://sergii-dev/./node_modules/property-information/lib/util/info.js","webpack://sergii-dev/./node_modules/property-information/lib/util/types.js","webpack://sergii-dev/./node_modules/property-information/lib/util/defined-info.js","webpack://sergii-dev/./node_modules/property-information/lib/util/create.js","webpack://sergii-dev/./node_modules/property-information/lib/xlink.js","webpack://sergii-dev/./node_modules/property-information/lib/xml.js","webpack://sergii-dev/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://sergii-dev/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://sergii-dev/./node_modules/property-information/lib/xmlns.js","webpack://sergii-dev/./node_modules/property-information/lib/aria.js","webpack://sergii-dev/./node_modules/property-information/lib/html.js","webpack://sergii-dev/./node_modules/property-information/lib/svg.js","webpack://sergii-dev/./node_modules/property-information/index.js","webpack://sergii-dev/./node_modules/react-markdown/lib/rehype-filter.js","webpack://sergii-dev/./node_modules/hast-util-whitespace/index.js","webpack://sergii-dev/./node_modules/property-information/lib/find.js","webpack://sergii-dev/./node_modules/property-information/lib/hast-to-react.js","webpack://sergii-dev/./node_modules/style-to-object/index.mjs","webpack://sergii-dev/./node_modules/react-markdown/lib/uri-transformer.js","webpack://sergii-dev/./node_modules/react-markdown/lib/ast-to-react.js","webpack://sergii-dev/./node_modules/comma-separated-tokens/index.js","webpack://sergii-dev/./node_modules/space-separated-tokens/index.js","webpack://sergii-dev/./node_modules/react-markdown/lib/react-markdown.js","webpack://sergii-dev/./src/components/project.tsx","webpack://sergii-dev/./node_modules/inline-style-parser/index.js","webpack://sergii-dev/./node_modules/is-buffer/index.js","webpack://sergii-dev/./node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","webpack://sergii-dev/./node_modules/react-markdown/node_modules/react-is/index.js","webpack://sergii-dev/./node_modules/style-to-object/index.js","webpack://sergii-dev/./src/assets/open-external-link.svg"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport slugify from \"slugify\";\nimport styled from \"@emotion/styled\";\n\nimport LeftPaneContainer from \"./left-pane-container\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport { isRouteActive } from \"@core/routing\";\n\nconst ProjectsList: FC<{ location: Location }> = props => {\n  const { edges } = useGitHubProjectsListQuery();\n  const [offsetTop, setOffsetTop] = useState(0);\n  const activeLi = React.useRef<HTMLLIElement>(null);\n\n  useEffect(() => {\n    setOffsetTop(activeLi?.current?.offsetTop || 0);\n  }, [activeLi]);\n\n  return (\n    <LeftPaneContainer title=\"Projects\" offsetTop={offsetTop}>\n      <Projects>\n        {edges.map(e => {\n          return e.node.data?.repositoryOwner?.repositories?.edges!.map(\n            item => {\n              const slug = `/projects/${slugify(\n                item?.node?.name!\n              ).toLocaleLowerCase()}`;\n\n              const isActive = isRouteActive(slug, props.location);\n\n              return (\n                <li key={slug} ref={isActive ? activeLi : null}>\n                  <Link\n                    to={slug}\n                    className={isActive ? \"active\" : undefined}\n                    title={item?.node?.name!}\n                  >\n                    <strong>{item?.node?.name}</strong>\n                    <p>{item?.node?.description}</p>\n                  </Link>\n                </li>\n              );\n            }\n          );\n        })}\n      </Projects>\n    </LeftPaneContainer>\n  );\n};\n\nconst useGitHubProjectsListQuery = () => {\n  const { allGithubData } =\n    useStaticQuery<GatsbyTypes.GitHubProjectsListQuery>(graphql`\n      query GitHubProjectsList {\n        allGithubData {\n          edges {\n            node {\n              data {\n                repositoryOwner {\n                  repositories {\n                    edges {\n                      node {\n                        name\n                        description\n                        createdAt\n                        object {\n                          text\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `);\n\n  return allGithubData;\n};\n\nconst Projects = styled.ul(props => ({\n  \"& > li > a\": {\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: props.theme.colors.leftPane.textColor,\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    border: \"solid 1px transparent\",\n  },\n  \"& > li > a:hover\": {\n    backgroundColor: props.theme.colors.leftPane.backgroundColorHover,\n    border: props.theme.colors.borderHover,\n    color: props.theme.colors.leftPane.textColorHover,\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n  },\n\n  \"& > li > a.active\": {\n    backgroundColor: props.theme.colors.leftPane.backgroundColorActive,\n    border: props.theme.colors.borderActive,\n    color: props.theme.colors.leftPane.textColorActive,\n  },\n\n  \"& > li > a strong\": {\n    fontWeight: \"bold\",\n  },\n\n  \"& > li > a span\": {\n    marginLeft: 16,\n    fontSize: 11,\n    opacity: 0.85,\n  },\n\n  \"& > li > a > p\": {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nexport default ProjectsList;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n */\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const includeImageAlt = (options || {}).includeImageAlt\n  return one(\n    value,\n    typeof includeImageAlt === 'boolean' ? includeImageAlt : true\n  )\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt) {\n  return (\n    (node(value) &&\n      (('value' in value && value.value) ||\n        (includeImageAlt && 'alt' in value && value.alt) ||\n        ('children' in value && all(value.children, includeImageAlt)))) ||\n    (Array.isArray(value) && all(value, includeImageAlt)) ||\n    ''\n  )\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","import React, { FC, useState } from \"react\";\nimport ReactMarkdownWithHtml from \"react-markdown\";\n\nimport ProjectsList from \"./left-pane/projects-list\";\nimport ContentContainer from \"./content\";\nimport styled from \"@emotion/styled\";\nimport SEO from \"./seo\";\nimport { HeadFC } from \"gatsby\";\nimport OpenExternalLinkIcon from \"../assets/open-external-link.svg\";\n\nconst Project: FC<{\n  pageContext: {\n    data: GatsbyTypes.GithubDataDataRepositoryOwnerRepositoriesEdgesNode;\n  };\n  location: Location;\n}> = props => {\n  const [shouldDisplayShadow, setShouldDisplayShadow] =\n    useState<boolean>(false);\n\n  return (\n    <ContentContainer\n      title={props.pageContext.data.name!}\n      displayShadow={shouldDisplayShadow}\n    >\n      <ContentWrapper\n        onScroll={e =>\n          setShouldDisplayShadow((e.target as HTMLElement).scrollTop > 0)\n        }\n      >\n        <main>\n          <OpenExternalLink>\n            <a\n              href={props.pageContext.data.url!}\n              title={props.pageContext.data.name!}\n            >\n              <OpenExternalLinkIcon />\n            </a>\n          </OpenExternalLink>\n          <ReactMarkdownWithHtml>\n            {props.pageContext.data.object?.text!}\n          </ReactMarkdownWithHtml>\n        </main>\n      </ContentWrapper>\n    </ContentContainer>\n  );\n};\n\nconst ContentWrapper = styled.div({\n  padding: \"18px\",\n  flex: \"1 1 auto\",\n  maxHeight: \"calc(100vh - 61px)\",\n  overflow: \"auto\",\n});\n\nconst OpenExternalLink = styled.span({\n  position: \"absolute\",\n  top: 70,\n  right: 20,\n});\n\n(Project as any).Aside = ProjectsList;\n\nexport default Project;\n\nexport const Head: HeadFC<\n  GatsbyTypes.GitHubProjectsListPageDataQuery,\n  { data: { name: string } }\n> = props => {\n  return (\n    <SEO\n      title={`Project | ${props.pageContext.data.name}`}\n      author=\"Sergii Mykhailov\"\n      keywords={props.pageContext.data.name}\n      description={props.pageContext.data.name}\n    />\n  );\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","var React = require('react');\n\nfunction OpenExternalLink (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",null,React.createElement(\"path\",{\"d\":\"M110.6,72.58c0-3.19,2.59-5.78,5.78-5.78c3.19,0,5.78,2.59,5.78,5.78v33.19c0,4.71-1.92,8.99-5.02,12.09 c-3.1,3.1-7.38,5.02-12.09,5.02H17.11c-4.71,0-8.99-1.92-12.09-5.02c-3.1-3.1-5.02-7.38-5.02-12.09V17.19 C0,12.48,1.92,8.2,5.02,5.1C8.12,2,12.4,0.08,17.11,0.08h32.98c3.19,0,5.78,2.59,5.78,5.78c0,3.19-2.59,5.78-5.78,5.78H17.11 c-1.52,0-2.9,0.63-3.91,1.63c-1.01,1.01-1.63,2.39-1.63,3.91v88.58c0,1.52,0.63,2.9,1.63,3.91c1.01,1.01,2.39,1.63,3.91,1.63h87.95 c1.52,0,2.9-0.63,3.91-1.63s1.63-2.39,1.63-3.91V72.58L110.6,72.58z M112.42,17.46L54.01,76.6c-2.23,2.27-5.89,2.3-8.16,0.07 c-2.27-2.23-2.3-5.89-0.07-8.16l56.16-56.87H78.56c-3.19,0-5.78-2.59-5.78-5.78c0-3.19,2.59-5.78,5.78-5.78h26.5 c5.12,0,11.72-0.87,15.65,3.1c2.48,2.51,1.93,22.52,1.61,34.11c-0.08,3-0.15,5.29-0.15,6.93c0,3.19-2.59,5.78-5.78,5.78 c-3.19,0-5.78-2.59-5.78-5.78c0-0.31,0.08-3.32,0.19-7.24C110.96,30.94,111.93,22.94,112.42,17.46L112.42,17.46z\"})));\n}\n\nOpenExternalLink.defaultProps = {\"version\":\"1.1\",\"id\":\"Layer_1\",\"x\":\"0px\",\"y\":\"0px\",\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 122.6 122.88\",\"fill\":\"currentColor\",\"style\":{\"enableBackground\":\"new 0 0 122.6 122.88\"},\"xmlSpace\":\"preserve\"};\n\nmodule.exports = OpenExternalLink;\n\nOpenExternalLink.default = OpenExternalLink;\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","useGitHubProjectsListQuery","allGithubData","useStaticQuery","Projects","_styled","props","display","flexDirection","color","theme","colors","leftPane","textColor","paddingTop","paddingBottom","paddingLeft","paddingRight","border","backgroundColor","backgroundColorHover","borderHover","textColorHover","textDecoration","cursor","backgroundColorActive","borderActive","textColorActive","fontWeight","marginLeft","fontSize","opacity","justifyContent","edges","offsetTop","setOffsetTop","useState","activeLi","React","useEffect","_activeLi$current","current","___EmotionJSX","LeftPaneContainer","title","map","e","_e$node$data","_e$node$data$reposito","_e$node$data$reposito2","node","data","repositoryOwner","repositories","item","_item$node","_item$node2","_item$node3","_item$node4","slug","slugify","toLocaleLowerCase","isActive","isRouteActive","location","ref","Link","to","className","undefined","description","stringifyPosition","position","point","index","line","column","pos","start","end","VFileMessage","Error","reason","place","origin","parts","super","indexOf","slice","this","message","stack","fatal","source","ruleId","file","actual","expected","url","note","path","basename","ext","TypeError","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","segments","joined","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","messages","history","stored","prop","includes","assertNonEmpty","push","assertPart","stem","encoding","info","fail","part","bail","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","output","fn","middleware","called","wrapped","parameters","fnExpectsCallback","done","apply","Promise","then","wrap","use","middelware","unified","base","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","parse","doc","vfile","assertParser","newable","String","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","type","asyncName","Boolean","looksLikeAVFile","one","includeImageAlt","alt","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","all","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","document","disable","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","extensions","combineExtensions","concat","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","d","combined","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","id","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","last","lines","trimLine","codePointAt","handlers","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","property","normal","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","style","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSizeAdjust","fontStretch","fontStyle","fontVariant","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cx","cy","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","whitespace","thing","valid","dash","cap","kebab","camelcase","charAt","hastToReact","protocols","uriTransformer","uri","trim","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","v","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","Project","_props$pageContext$da","shouldDisplayShadow","setShouldDisplayShadow","ContentContainer","pageContext","displayShadow","ContentWrapper","scrollTop","OpenExternalLink","OpenExternalLinkIcon","ReactMarkdownWithHtml","styles","Aside","ProjectsList","Head","SEO","author","keywords","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","str","lineno","updatePosition","Position","errorsList","msg","err","filename","silent","re","m","comments","c","val","ret","decl","decls","declarations","isBuffer","u","b","for","f","g","h","l","n","p","q","t","a","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","StyleToObject","hasIterator","len","defaultProps"],"sourceRoot":""}